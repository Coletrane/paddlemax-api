apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'liquibase'

buildscript {
	ext {
		kotlinVersion = '1.2.0'
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.liquibase:liquibase-gradle-plugin:1.2.4")
		classpath("org.postgresql:postgresql:42.1.4")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")

	}
}


group = 'com.paddlemax'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile(group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.0.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile(group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.2')
	compile(group: 'org.postgresql', name: 'postgresql', version: '42.1.4')
 	compile(group: 'com.fasterxml.jackson.module', name: 'jackson-modules-java8', version: '2.9.2', ext: 'pom')
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0")
	compile(group: 'com.h2database', name: 'h2', version: '1.4.196')
	compile group: 'org.yaml', name: 'snakeyaml', version: '1.19'
	compile(group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.2.1.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
	testCompile('org.springframework.security:spring-security-test')
}

springBoot {
	executable = true
}

task('buildSchema').doLast({
	String changelogLocation = "$projectDir/changelog.xml"

	println 'Building Schema: ' +
			'Changelog Location: ' + changelogLocation

	// Load DB config
	String propsLocation = "$projectDir/src/main/resources/prod.yml"
	Properties props = new Properties()
	InputStream stream
	try {
		stream = new FileInputStream(propsLocation)
		props.load(stream)
		stream.close()
	} catch(FileNotFoundException e){
		println("No configuration found in " + propsLocation)
	}

	liquibase {
		activities {
			main {
				changeLogFile changelogLocation
				url props.getProperty("url")
				username props.getProperty("username")
				password props.get("password")
			}
		}
	}
})



